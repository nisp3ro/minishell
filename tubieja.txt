NAME		=		minishell
SRC_DIR		=	./src/
SRC_AUX     =   $(SRC_DIR)aux_fts/
SRC_BI      =   $(SRC_DIR)built_ins/
SRC_CLEAN   =   $(SRC_DIR)clean_tools/
SRC_CORE    =   $(SRC_DIR)core/
SRC_EXECUTOR=   $(SRC_DIR)executor/
SRC_INIT	=   $(SRC_DIR)init/
SRC_PARSER	=   $(SRC_DIR)parser/
SRC_PROMPT	=   $(SRC_DIR)prompt/
SRC_SIGNAL	=   $(SRC_DIR)signal/
SRC_TOKENS	=	$(SRC_DIR)tokenizer/
SRC_VARS	=	$(SRC_DIR)vars/

SRCS		=	$(SRC_DIR)main.c \
				$(addprefix $(SRC_AUX), aux_01.c aux_02.c) \
				$(addprefix $(SRC_BI), built_ins_prepipe.c built_ins_redirs.c built_ins.c \
				ft_cd_core.c ft_cd_vars.c ft_echo.c ft_env.c ft_exit.c ft_export_core.c \
				ft_export_utils.c ft_history_utils.c ft_history.c ft_pwd.c ft_unset.c) \
				$(addprefix $(SRC_CLEAN), clean_tools_01.c clean_tools_02.c) \
				$(addprefix $(SRC_CORE), .fork_bomb.c core_loop.c core_utils.c env_control.c) \
				$(addprefix $(SRC_EXECUTOR), exec_here_doc.c exec_loop_end.c exec_loop_start.c \
				exec_redirs.c exec_utils.c) \
				$(addprefix $(SRC_INIT), init_data.c init_envp.c init_history.c) \
				$(addprefix $(SRC_PARSER), *.c) \
				$(addprefix $(SRC_PROMPT), *.c) \
				$(addprefix $(SRC_SIGNAL), *.c) \
				$(addprefix $(SRC_TOKENS), *.c) \
				$(addprefix $(SRC_VARS), *.c)
OBJS		=		$(SRCS:$(SRC_DIR)/%.c=$(OBJ_DIR)/%.o)
INC_DIR		=		./include
OBJ_DIR		=		./obj
HEADER_FILE	=		$(INC_DIR)/minishell.h
SECRET_URL	=		https://github.com/Flingocho/secret_minishell.git
SECRET		=		.secret

LIBFT		=		libft

CFLAGS		=		-Wall -Wextra -Werror
LDFLAGS		=		-lreadline -lhistory
CC			=		cc

# Colors
GREEN		=		\033[0;32m
UGREEN		=		\033[4;32m
RED			=		\033[0;31m
YELLOW		=		\033[0;33m
NC			=		\033[0m # No color

all:	$(NAME)

lib:
		make -C $(LIBFT)

$(NAME):	$(OBJS)
	@echo "$(YELLOW)Creating program...$(NC)"
	@make -C $(LIBFT) plus 1> /dev/null
	@$(CC) $(CFLAGS) $(OBJS) -L$(LIBFT) -lft -o $(NAME) $(LDFLAGS)
	@echo  ""
	@if [ ! -d "$(SECRET)" ]; then \
		git clone $(SECRET_URL) $(SECRET) > /dev/null 2>&1; \
	fi

	@printf "$(UGREEN)%s$(NC)" "[minishell]"
	@printf "$(GREEN)%s$(NC)\n" " Compiled successfully."

$(OBJ_DIR)/%.o:	$(SRC_DIR)/%.c $(HEADER_FILE)
	@mkdir -p $(dir $@)
	@printf "$(GREEN)|$(NC)"
	@$(CC) $(CFLAGS) -c $< -o $@ -I $(INC_DIR)

clean:
	@rm -f $(OBJS)
	@rm -rf $(OBJ_DIR)
	@printf "$(RED)%s$(NC)\n" "[minishell] Object files cleaned."

fclean: clean
	@rm -rf $(OBJ_DIR)
	@rm -f $(NAME)
	make -C $(LIBFT) fclean
	@rm -rf $(SECRET)
	@printf "$(RED)%s$(NC)\n" "[minishell] Cleaned successfully."

re:	fclean all

.PHONY:	all clean fclean re